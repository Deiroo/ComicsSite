// <auto-generated />
using System;
using Comics.Repository.dbcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Comics.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190707083409_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Comics.Entity.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComicId");

                    b.Property<int?>("UsuarioId");

                    b.Property<int>("cantidad");

                    b.HasKey("Id");

                    b.HasIndex("ComicId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("Comics.Entity.Comic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneroId");

                    b.Property<int>("ProveedorId");

                    b.Property<DateTime>("fechaPublicacion");

                    b.Property<DateTime>("fechaRegistro");

                    b.Property<string>("idioma");

                    b.Property<string>("nombre");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Comics");
                });

            modelBuilder.Entity("Comics.Entity.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre");

                    b.Property<int?>("subGeneroId");

                    b.HasKey("Id");

                    b.HasIndex("subGeneroId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Comics.Entity.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("direccion");

                    b.Property<string>("nombre");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Comics.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidos");

                    b.Property<string>("contraseña");

                    b.Property<string>("email");

                    b.Property<string>("nombres");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Comics.Entity.Carrito", b =>
                {
                    b.HasOne("Comics.Entity.Comic", "Comic")
                        .WithMany()
                        .HasForeignKey("ComicId");

                    b.HasOne("Comics.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Comics.Entity.Comic", b =>
                {
                    b.HasOne("Comics.Entity.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Comics.Entity.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Comics.Entity.Genero", b =>
                {
                    b.HasOne("Comics.Entity.Genero", "subGenero")
                        .WithMany()
                        .HasForeignKey("subGeneroId");
                });
#pragma warning restore 612, 618
        }
    }
}
